CompassKeyboard is a virtual keyboard for android

Its main goal is to enable entering any character (including national characters and symbols of computer languages as well) with the same layouts.
Default layouts support latin- and cyrillic-based and greek character sets, user-defineable external layouts are supported as well.

(Picture: latin, cyrillic, greek layout)

Usage
-----
As soft keyboards are not for touch-typing, neither the usual 'qwerty' nor the dvorak layouts would make sense, so the keys are arranged by functional groups, the letters in alphabetical order, and the accented characters are available as modifications of their base character.

Supporting these many characters would require quit a lot of keys, way too much for a soft keyboard, so the functions of the keys had to be extended: in addition to tapping on them, you may 'drag' or 'swipe' them to the eight direction of the compass as well, the letter generated by a key will depend on the direction to which you dragged it. These strokes don't need to be long, just start them inside of the key and end on the outside of it. This behaviour will let you enter nine times more characters than an usual tapping-only keyboard, although it may require some time to get used to it (thanks to the alphabetical ordering, the learning curve is quite steep).
(Picture: key actions, how to enter 'abcdefghi')


Global swipes
-------------
Especially for the latin alphabet, in addition to the base characters there are quite a lot of accented ones in use: acute, circumflex, grave, double grave, diaeresis, hacek, macron, dot, ring or tilde are the most usual, but some languages use stroked letters as well. CompassKeyboard supports even these, all of them, still in one single layout. As these many characters would require too many keys, even of the 9-directional kind, so another feature had to be introduced: the global swipes. If you make a large diagonal swipe from one corner of the keyboard to the opposite one, or one from the center top to bottom, or from the left side to the right, or the reverse, you active an 'accented mode', similar to pressing a shift key on a regular keyboard. In these accented modes the base characters change their behaviour and their look, they will show and generate the accented version of the base character. A global swipe affects only the next keystroke, but if you would like to revert to the normal mode without entering any character, just tap/drag any character that has no function in this accented mode. If you would like to enter uppercase accented characters, just tap shift first and then activate the required accented mode by its global swipe.
(Picture: global swipes)

Latin layout:
Global swipe	Accented mode
NW		grave		(ù)
N		circumflex	(û)	double acute
NE		acute		(ú)
W		diaeresis	(ü)
E		miscellaneous	(ū)	dot, ring, macron, specials
SW		tilde		(ũ)
S		caron/hacek	(ǔ)
SE		special 	(ų)	cedilla, comma, specials

Cyrillic layout:
Global swipe	Mode
NW		variant		(ы)
NE		soft		(й)
SW		hacek		(ӂ)	specials
SE		special		(ӣ)	specials

Greek layout:
SE		special		(ς)

Even for these accented modes, there are some characters that have more variants than the accented modes we have, in such cases the less frequent variants are mapped to an accented mode of a nearby unused character: like 'ő' ('o' with double acute) had to be mapped to circumflex-'n', which is adjacent to 'o'. At first glance this may seem complicated, but the experience shows that it can be get used to quite quickly.


Special keys
------------
The most frequently used non-alphabetic characters are available in the default mode of all layouts. Most of these are readily recognisable, however not all of them represent visual characters, for these some glyphs had to be displayed:

Default mode:
Key		Symbol
Shift		⇧		(on the lower-leftmost key)
Ctrl		C
Caps lock	⇪		(on the lower-leftmost key in 'Shift' mode)
Hide keyboard	H
Esc		E		(on the lower-leftmost key in 'Spec' mode)

Arrow keys	↑ ← → ↓		(on the navigational key)
Enter		↲
Page Up/Down	↟ ↡		(on the navigational key in 'Spec' mode)
Home/End	↞ ↠
Center		╳

Backspace	↚		(on the lower-centermost key)
Space		▆
Tab		⇨

Del		↛		(on the lower-centermost key in 'Spec' mode)
Ins		↱		

F1..F10		Ⅰ..Ⅹ		(on the numbers in 'Spec' mode)


Vibration
---------
Some people find useful if there is a sensible feedback of the keyboard events, so you may configure an optional single or double vibration signal when entering a character, choosing a modifier or cancelling an accented mode.


Custom layouts
--------------
Despite the best efforts for defining the default layouts as flexible as possible, you may find that another arrangement would fit your needs better, so CompassKeyboard supports loading a layout from a plain XML file as well. Although this feature gives you a complete control of the key layout and behaviour, designing such a file is somewhat a developers task and it is definitely a tedious work (believe me...), so before you decide to do so, please consider first whether it is really worth your time and efforts, and perhaps consult the document LayoutFormat.README and the built-in layouts, all available as part of the source code.
(Picture: file browser)


Source
------
CompassKeyboard is available at http://code.google.com


Licensing, price, feedback
--------------------------
CompassKeyboard is released under a FreeBSD-style license, so you may redistribute and use it modified or unmodified as long as you don't strip my copyright notice off of it.
It is free of any charge, however, if you want to encourage further developments and you find CompassKeyboard useful enough to be worth a few dollars, you can donate some through PayPal: 'gabor.simon@mailbox.hu'.
If you have some ideas how CompassKeyboard could be improved, some features you would find useful, feel free to share it with me on my email address above. As this is only a hobby project for me, I cannot promise anything, but I will try to adapt at least the most popular ideas.


Thanks
------
Finally, I'd like to say thanks to my family, friends, teachers, colleagues, and above all, to the Big Boss Above All :).

